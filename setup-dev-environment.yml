---
- name: Setup Development Environment in /applis/bin
  hosts: localhost
  become: yes
  connection: local

  vars:
    jdk7_url: "https://cdn.azul.com/zulu/bin/zulu7.56.0.11-ca-jdk7.0.352-linux_x64.tar.gz"
    jdk8_url: "https://cdn.azul.com/zulu/bin/zulu8.68.0.21-ca-jdk8.0.362-linux_x64.tar.gz"
    maven_version: "3.8.5"
    sonar_version: "sonarqube-9.8.0.63668"
    grails_version: "2.2.0"
    install_dir: "/applis/bin"
    maven_download_url: "https://archive.apache.org/dist/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.zip"
    sonar_download_url: "https://binaries.sonarsource.com/Distribution/sonarqube/{{ sonar_version }}.zip"
    grails_download_url: "https://github.com/grails/grails-core/releases/download/v{{ grails_version }}/grails-{{ grails_version }}.zip"
    symlink_dir: "/applis/bin"

  tasks:
    - name: Update apt repository cache
      apt:
        update_cache: yes

    - name: Create base directory for applications
      file:
        path: "{{ install_dir }}"
        state: directory
        mode: '0755'

    - name: Install required packages
      apt:
        name:
          - wget
          - unzip
          - bzip2
          - gzip
          - tar
        state: present

    - name: Create directory for JDK7
      file:
        path: "{{ install_dir }}/jdk7"
        state: directory
        mode: '0755'

    - name: Create directory for JDK8
      file:
        path: "{{ install_dir }}/jdk8"
        state: directory
        mode: '0755'

    - name: Create directory for Maven
      file:
        path: "{{ install_dir }}/maven"
        state: directory
        mode: '0755'

    - name: Create directory for SonarQube
      file:
        path: "{{ install_dir }}/sonar"
        state: directory
        mode: '0755'

    - name: Create directory for Grails
      file:
        path: "{{ install_dir }}/grails"
        state: directory
        mode: '0755'

    - name: Download OpenJDK 7
      get_url:
        url: "{{ jdk7_url }}"
        dest: "{{ install_dir }}/jdk7.tar.gz"

    - name: Download OpenJDK 8
      get_url:
        url: "{{ jdk8_url }}"
        dest: "{{ install_dir }}/jdk8.tar.gz"

    - name: Download Maven
      get_url:
        url: "{{ maven_download_url }}"
        dest: "{{ install_dir }}/apache-maven-{{ maven_version }}-bin.zip"

    - name: Download SonarQube
      get_url:
        url: "{{ sonar_download_url }}"
        dest: "{{ install_dir }}/{{ sonar_version }}.zip"

    - name: Download Grails
      get_url:
        url: "{{ grails_download_url }}"
        dest: "{{ install_dir }}/grails-{{ grails_version }}.zip"

    - name: Extract OpenJDK 7
      unarchive:
        src: "{{ install_dir }}/jdk7.tar.gz"
        dest: "{{ install_dir }}/jdk7"
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: Extract OpenJDK 8
      unarchive:
        src: "{{ install_dir }}/jdk8.tar.gz"
        dest: "{{ install_dir }}/jdk8"
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: Extract Maven
      unarchive:
        src: "{{ install_dir }}/apache-maven-{{ maven_version }}-bin.zip"
        dest: "{{ install_dir }}/maven"
        remote_src: yes

    - name: Extract SonarQube
      unarchive:
        src: "{{ install_dir }}/{{ sonar_version }}.zip"
        dest: "{{ install_dir }}/sonar"
        remote_src: yes

    - name: Extract Grails
      unarchive:
        src: "{{ install_dir }}/grails-{{ grails_version }}.zip"
        dest: "{{ install_dir }}/grails"
        remote_src: yes

    - name: Remove existing JDK7 directory to create symlink
      file:
        path: "{{ symlink_dir }}/jdk7"
        state: absent
      when: 
        - ansible_facts['os_family'] == "Debian"

    - name: Create symbolic link for JDK7
      file:
        src: "{{ install_dir }}/jdk7/bin/java"
        dest: "{{ symlink_dir }}/jdk7"
        state: link
        owner: ubuntu
        group: ubuntu

    - name: Create symbolic link for JDK8
      file:
        src: "{{ install_dir }}/jdk8/bin/java"
        dest: "{{ symlink_dir }}/jdk8"
        state: link
        owner: ubuntu
        group: ubuntu

    - name: Create symbolic link for Maven
      file:
        src: "{{ install_dir }}/maven/bin/mvn"
        dest: "{{ symlink_dir }}/maven"
        state: link
        owner: ubuntu
        group: ubuntu

    - name: Create symbolic link for SonarQube
      file:
        src: "{{ install_dir }}/sonar/bin/linux-x86-64/sonar.sh"
        dest: "{{ symlink_dir }}/sonar"
        state: link
        owner: ubuntu
        group: ubuntu

    - name: Start SonarQube service
      shell: "nohup {{ install_dir }}/sonar/bin/linux-x86-64/sonar.sh start &"
      args:
        chdir: "{{ install_dir }}/sonar"

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ install_dir }}/jdk7.tar.gz"
        - "{{ install_dir }}/jdk8.tar.gz"
        - "{{ install_dir }}/apache-maven-{{ maven_version }}-bin.zip"
        - "{{ install_dir }}/{{ sonar_version }}.zip"
        - "{{ install_dir }}/grails-{{ grails_version }}.zip"
